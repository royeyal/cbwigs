function z(){console.log("🚨🚨🚨 TEXT REVEAL FUNCTION CALLED 🚨🚨🚨"),console.log("🎯 initMaskTextScrollReveal: Starting initialization..."),console.log("🔤 Checking font loading status...");function u(){if(console.log("✅ Fonts loaded, proceeding with text reveal initialization..."),typeof gsap>"u"){console.error("❌ GSAP is required for text reveal functionality. Please include GSAP in your project.");return}if(console.log("✅ GSAP found:",typeof gsap,gsap.version||"version unknown"),typeof SplitText>"u"){console.error("❌ GSAP SplitText plugin is required for text reveal functionality. Please include SplitText plugin.");return}if(console.log("✅ SplitText plugin found:",typeof SplitText),typeof ScrollTrigger>"u"){console.error("❌ GSAP ScrollTrigger plugin is required for text reveal functionality. Please include ScrollTrigger plugin.");return}console.log("✅ ScrollTrigger plugin found:",typeof ScrollTrigger);try{gsap.registerPlugin(SplitText,ScrollTrigger),console.log("✅ GSAP plugins registered successfully")}catch{console.error("❌ Failed to register GSAP plugins");return}const l=document.querySelectorAll('[data-split="heading"]');if(console.log('🔍 Found headings with data-split="heading":',l.length),!l.length){console.log("ℹ️ No text reveal elements found - this is normal, exiting gracefully");return}l.forEach((t,n)=>{var o,a;if(console.log(`📝 Processing heading ${n+1}/${l.length}:`,t),console.log("  - Text content:",t.textContent.trim()),console.log("  - Element type:",t.tagName),!t.textContent.trim()){console.warn("⚠️ Heading has no text content, skipping:",t);return}try{console.log("✂️ Creating SplitText instance...");const i=new SplitText(t,{type:"lines,words",linesClass:"line",wordsClass:"word",onSplit(c){var p,r,s,g;console.log("🚨🚨🚨 ONSPLIT CALLBACK TRIGGERED 🚨🚨🚨"),console.log("🎭 SplitText onSplit callback triggered"),console.log("  - Self object:",c),console.log("  - Original element (self.original):",c.original),console.log("  - Elements array (self.elements):",c.elements),console.log("  - First element (self.elements[0]):",(p=c.elements)==null?void 0:p[0]),console.log("  - Heading element from scope:",t),console.log("  - Lines created:",((r=c.lines)==null?void 0:r.length)||0),console.log("  - Words created:",((s=c.words)==null?void 0:s.length)||0);const f=c.original||((g=c.elements)==null?void 0:g[0])||t;if(console.log("🎯 Target element for visibility:",f),!f){console.error("❌ No target element available!");return}if(!document.contains(f)){console.error("❌ Target element is not in the DOM!");return}console.log("✅ About to call gsap.set() on:",f);try{console.log("🔧 Setting visibility on target element..."),gsap.set(f,{visibility:"visible"}),console.log("✅ Visibility set successfully")}catch(m){console.error("❌ Failed to set visibility:",m),console.error("❌ Error details:",m.message,m.stack)}}});console.log("✅ SplitText created successfully:",i),console.log("  - Lines:",((o=i.lines)==null?void 0:o.length)||0),console.log("  - Words:",((a=i.words)==null?void 0:a.length)||0),i.lines&&i.lines.length>0?(t.classList.add("split-ready"),console.log("✅ Added split-ready class to heading")):console.warn("⚠️ No lines created by SplitText, not adding split-ready class"),i.words&&i.words.length>0&&(console.log("🎬 Setting up scroll animation..."),gsap.set(i.words,{yPercent:100,opacity:0}),ScrollTrigger.create({trigger:t,start:"top 80%",onEnter:()=>{console.log("🎯 ScrollTrigger activated for heading:",t),gsap.to(i.words,{yPercent:0,opacity:1,duration:.8,stagger:.08,ease:"power2.out"})}}),console.log("✅ Scroll animation setup complete"))}catch(i){console.error("❌ Error processing heading:",i),console.error("  - Heading element:",t)}}),console.log("✅ Text reveal initialization complete")}document.fonts&&document.fonts.ready?(console.log("🔤 Using document.fonts.ready API..."),document.fonts.ready.then(()=>{console.log("✅ Fonts loaded via document.fonts.ready"),u()}).catch(l=>{console.warn("⚠️ Font loading detection failed, proceeding anyway:",l),u()})):(console.log("🔤 document.fonts not supported, using load event fallback..."),document.readyState==="complete"?(console.log("✅ Document already complete, initializing immediately"),u()):window.addEventListener("load",()=>{console.log("✅ Window load event fired, initializing text reveal"),u()}))}function W(){if(typeof gsap>"u"){console.error("GSAP is required for content reveal scroll animations. Please include GSAP in your project.");return}if(typeof ScrollTrigger>"u"){console.error("GSAP ScrollTrigger plugin is required for content reveal scroll animations. Please include ScrollTrigger plugin.");return}try{gsap.registerPlugin(ScrollTrigger)}catch(t){console.error("Failed to register GSAP ScrollTrigger plugin:",t);return}const u=window.matchMedia("(prefers-reduced-motion: reduce)").matches,l=gsap.context(()=>{document.querySelectorAll("[data-reveal-group]").forEach(t=>{const n=(parseFloat(t.getAttribute("data-stagger"))||100)/1e3,o=t.getAttribute("data-distance")||"2em",a=t.getAttribute("data-start")||"top 80%",i=.8,c="power4.inOut";if(u){gsap.set(t,{clearProps:"all",y:0,autoAlpha:1});return}const f=Array.from(t.children).filter(r=>r.nodeType===1);if(!f.length){gsap.set(t,{y:o,autoAlpha:0}),ScrollTrigger.create({trigger:t,start:a,once:!0,onEnter:()=>gsap.to(t,{y:0,autoAlpha:1,duration:i,ease:c,onComplete:()=>gsap.set(t,{clearProps:"all"})})});return}const p=[];f.forEach(r=>{const s=r.matches("[data-reveal-group-nested]")?r:r.querySelector(":scope [data-reveal-group-nested]");if(s){const g=r.getAttribute("data-ignore")==="false"||s.getAttribute("data-ignore")==="false";p.push({type:"nested",parentEl:r,nestedEl:s,includeParent:g})}else p.push({type:"item",el:r})}),p.forEach(r=>{if(r.type==="item"){const g=r.el.matches("[data-reveal-group-nested]")?o:r.el.getAttribute("data-distance")||o;gsap.set(r.el,{y:g,autoAlpha:0})}else{r.includeParent&&gsap.set(r.parentEl,{y:o,autoAlpha:0});const s=r.nestedEl.getAttribute("data-distance")||o;Array.from(r.nestedEl.children).forEach(g=>gsap.set(g,{y:s,autoAlpha:0}))}}),p.forEach(r=>{r.type==="nested"&&r.includeParent&&gsap.set(r.parentEl,{y:o})}),ScrollTrigger.create({trigger:t,start:a,once:!0,onEnter:()=>{const r=gsap.timeline();p.forEach((s,g)=>{const m=g*n;if(s.type==="item")r.to(s.el,{y:0,autoAlpha:1,duration:i,ease:c,onComplete:()=>gsap.set(s.el,{clearProps:"all"})},m);else{s.includeParent&&r.to(s.parentEl,{y:0,autoAlpha:1,duration:i,ease:c,onComplete:()=>gsap.set(s.parentEl,{clearProps:"all"})},m);const S=parseFloat(s.nestedEl.getAttribute("data-stagger")),G=isNaN(S)?n:S/1e3;Array.from(s.nestedEl.children).forEach((w,E)=>{r.to(w,{y:0,autoAlpha:1,duration:i,ease:c,onComplete:()=>gsap.set(w,{clearProps:"all"})},m+E*G)})}})}})})});return()=>l.revert()}function L(){if(console.log("🎯 initBasicGSAPSlider: Starting initialization..."),typeof gsap>"u"){console.error("❌ GSAP is required for slider functionality. Please include GSAP in your project.");return}if(console.log("✅ GSAP found:",typeof gsap,gsap.version||"version unknown"),typeof Draggable>"u"){console.error("❌ GSAP Draggable plugin is required for slider functionality. Please include Draggable plugin.");return}console.log("✅ Draggable plugin found:",typeof Draggable);try{gsap.registerPlugin(Draggable),console.log("✅ Draggable plugin registered successfully")}catch(l){console.error("❌ Failed to register GSAP Draggable plugin:",l);return}const u=document.querySelectorAll("[data-gsap-slider-init]");if(console.log("🔍 Found slider elements:",u.length),u.length===0){console.log("ℹ️ No sliders found on page - this is normal, exiting gracefully");return}u.forEach((l,t)=>{console.log(`🎠 Initializing slider ${t+1}/${u.length}:`,l),l._sliderDraggable&&(console.log("🧹 Cleaning up existing slider instance"),l._sliderDraggable.kill());const n=l.querySelector("[data-gsap-slider-collection]"),o=l.querySelector("[data-gsap-slider-list]"),a=Array.from(l.querySelectorAll("[data-gsap-slider-item]")),i=Array.from(l.querySelectorAll("[data-gsap-slider-control]"));if(console.log("📋 Slider elements found:"),console.log("  - Collection:",n),console.log("  - Track:",o),console.log("  - Items:",a.length,a),console.log("  - Controls:",i.length,i),!n){console.error("❌ Missing required element: [data-gsap-slider-collection]");return}if(!o){console.error("❌ Missing required element: [data-gsap-slider-list]");return}if(a.length===0){console.error("❌ No slider items found: [data-gsap-slider-item]");return}console.log("♿ Setting up accessibility attributes..."),l.setAttribute("role","region"),l.setAttribute("aria-roledescription","carousel"),l.setAttribute("aria-label","Slider"),n.setAttribute("role","group"),n.setAttribute("aria-roledescription","Slides List"),n.setAttribute("aria-label","Slides"),a.forEach((e,h)=>{e.setAttribute("role","group"),e.setAttribute("aria-roledescription","Slide"),e.setAttribute("aria-label",`Slide ${h+1} of ${a.length}`),e.setAttribute("aria-hidden","true"),e.setAttribute("aria-selected","false"),e.setAttribute("tabindex","-1")}),i.forEach(e=>{const h=e.getAttribute("data-gsap-slider-control");e.setAttribute("role","button"),e.setAttribute("aria-label",h==="prev"?"Previous Slide":"Next Slide"),e.disabled=!0,e.setAttribute("aria-disabled","true")}),console.log("📏 Computing slider dimensions...");const c=getComputedStyle(l),f=c.getPropertyValue("--slider-status").trim();let p=parseFloat(c.getPropertyValue("--slider-spv"));const r=a[0].getBoundingClientRect(),s=parseFloat(getComputedStyle(a[0]).marginRight),g=r.width+s;isNaN(p)&&(p=n.clientWidth/g);const m=Math.max(1,Math.min(p,a.length)),S=f==="on"&&m<a.length;if(console.log("📊 Slider calculations:"),console.log("  - Status var (--slider-status):",f),console.log("  - SPV var (--slider-spv):",p),console.log("  - First item rect:",r),console.log("  - Margin right:",s),console.log("  - Slide width:",g),console.log("  - Collection width:",n.clientWidth),console.log("  - Calculated SPV:",m),console.log("  - Items length:",a.length),console.log("  - Slider enabled:",S),l.setAttribute("data-gsap-slider-status",S?"active":"not-active"),!S){console.log("⏹️ Slider disabled - tearing down..."),o.removeAttribute("style"),o.onmouseenter=null,o.onmouseleave=null,o.removeAttribute("data-gsap-slider-list-status"),l.removeAttribute("role"),l.removeAttribute("aria-roledescription"),l.removeAttribute("aria-label"),n.removeAttribute("role"),n.removeAttribute("aria-roledescription"),n.removeAttribute("aria-label"),a.forEach(e=>{e.removeAttribute("role"),e.removeAttribute("aria-roledescription"),e.removeAttribute("aria-label"),e.removeAttribute("aria-hidden"),e.removeAttribute("aria-selected"),e.removeAttribute("tabindex"),e.removeAttribute("data-gsap-slider-item-status")}),i.forEach(e=>{e.disabled=!1,e.removeAttribute("role"),e.removeAttribute("aria-label"),e.removeAttribute("aria-disabled"),e.removeAttribute("data-gsap-slider-control-status")});return}o.onmouseenter=()=>{o.setAttribute("data-gsap-slider-list-status","grab")},o.onmouseleave=()=>{o.removeAttribute("data-gsap-slider-list-status")};const G=n.clientWidth,w=o.scrollWidth,E=Math.max(w-G,0),x=-E,P=0,R=E/g,F=Math.floor(R),b=[];for(let e=0;e<=F;e++)b.push(-e*g);F<R&&b.push(-R*g);let A=0;const T=gsap.quickSetter(o,"x","px");let q=n.getBoundingClientRect();function y(e){if(e>P||e<x)return;const h=e>P?P:e<x?x:e;let C=b[0];b.forEach(d=>{Math.abs(d-h)<Math.abs(C-h)&&(C=d)}),A=b.indexOf(C),a.forEach((d,D)=>{const v=d.getBoundingClientRect(),N=v.left-q.left+v.width/2,k=N>0&&N<q.width,M=D===A?"active":k?"inview":"not-active";d.setAttribute("data-gsap-slider-item-status",M),d.setAttribute("aria-selected",D===A?"true":"false"),d.setAttribute("aria-hidden",k?"false":"true"),d.setAttribute("tabindex",D===A?"0":"-1")}),i.forEach(d=>{const v=d.getAttribute("data-gsap-slider-control")==="prev"?A>0:A<b.length-1;d.disabled=!v,d.setAttribute("aria-disabled",v?"false":"true"),d.setAttribute("data-gsap-slider-control-status",v?"active":"not-active")})}i.forEach(e=>{const h=e.getAttribute("data-gsap-slider-control");e.addEventListener("click",()=>{if(e.disabled)return;const d=A+(h==="next"?1:-1);gsap.to(o,{duration:.4,x:b[d],onUpdate:()=>y(gsap.getProperty(o,"x"))})})}),console.log("🎮 Creating Draggable instance..."),console.log("  - Track element:",o),console.log("  - Bounds:",{minX:x,maxX:P}),console.log("  - Snap points:",b);try{l._sliderDraggable=Draggable.create(o,{type:"x",inertia:!0,bounds:{minX:x,maxX:P},throwResistance:2e3,dragResistance:.05,maxDuration:.6,minDuration:.2,edgeResistance:.75,snap:{x:b,duration:.4},onPress(){o.setAttribute("data-gsap-slider-list-status","grabbing"),q=n.getBoundingClientRect()},onDrag(){T(this.x),y(this.x)},onThrowUpdate(){T(this.x),y(this.x)},onThrowComplete(){T(this.endX),y(this.endX),o.setAttribute("data-gsap-slider-list-status","grab")},onRelease(){T(this.x),y(this.x),o.setAttribute("data-gsap-slider-list-status","grab")}})[0],console.log("✅ Draggable instance created successfully:",l._sliderDraggable)}catch(e){console.error("❌ Failed to create Draggable instance:",e);return}console.log("🎬 Setting initial slider state..."),T(0),y(0),console.log("✅ Slider initialization complete!")})}function I(u,l){let t=innerWidth,n;return function(...o){clearTimeout(n),n=setTimeout(()=>{innerWidth!==t&&(console.log("📏 Window resized, reinitializing sliders..."),t=innerWidth,u.apply(this,o))},l)}}typeof window<"u"&&(console.log("🔄 Setting up window resize handler for sliders..."),window.addEventListener("resize",I(L,200)));document.addEventListener("DOMContentLoaded",()=>{z(),W(),L()});
